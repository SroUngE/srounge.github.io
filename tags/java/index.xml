<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Java - Tag - Rong&#39;s Blog</title>
        <link>http://example.org/tags/java/</link>
        <description>Java - Tag - Rong&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>977683159@qq.com (SroUngE)</managingEditor>
            <webMaster>977683159@qq.com (SroUngE)</webMaster><lastBuildDate>Sun, 12 May 2024 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://example.org/tags/java/" rel="self" type="application/rss+xml" /><item>
    <title>Leetcode 工具类 构造输入</title>
    <link>http://example.org/posts/leetcode-util/</link>
    <pubDate>Sun, 12 May 2024 00:00:00 &#43;0000</pubDate>
    <author>SroUngE</author>
    <guid>http://example.org/posts/leetcode-util/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://s2.loli.net/2024/05/12/9jKdXJ8WaEq4it6.png" referrerpolicy="no-referrer">
            </div>]]></description>
</item>
<item>
    <title>排序：堆排序</title>
    <link>http://example.org/posts/sort-heap-sort/</link>
    <pubDate>Sun, 25 Feb 2024 00:00:00 &#43;0000</pubDate>
    <author>SroUngE</author>
    <guid>http://example.org/posts/sort-heap-sort/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://s2.loli.net/2024/01/23/3qPWMLs9UBogi7A.png" referrerpolicy="no-referrer">
            </div>代码 public int[] sortArray(int[] arr) { int len = arr.length; buildHeap(arr, len); for (int i = len - 1; i &gt; 0; i--) { swap(arr, 0, i); len--; heapify(arr, 0, len); } return arr; } private void buildHeap(int[] arr, int len) { for (int i = (len / 2 - 1); i &gt;= 0; i--) { heapify(arr, i, len); } } private void heapify(int[] arr, int i, int len)]]></description>
</item>
<item>
    <title>排序：快速排序</title>
    <link>http://example.org/posts/sort-quick-sort/</link>
    <pubDate>Sat, 24 Feb 2024 00:00:00 &#43;0000</pubDate>
    <author>SroUngE</author>
    <guid>http://example.org/posts/sort-quick-sort/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://s2.loli.net/2024/01/23/3qPWMLs9UBogi7A.png" referrerpolicy="no-referrer">
            </div>思路 快速排序是一种 分治 的排序算法。它将一个数组分成两个子数组，将两部分独立地排序。 快速排序与归并排序是互补的：归并排序将数组分成两个子数组分]]></description>
</item>
<item>
    <title>排序：归并排序</title>
    <link>http://example.org/posts/sort-merge-sort/</link>
    <pubDate>Fri, 12 Jan 2024 00:00:00 &#43;0000</pubDate>
    <author>SroUngE</author>
    <guid>http://example.org/posts/sort-merge-sort/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://s2.loli.net/2024/01/23/3qPWMLs9UBogi7A.png" referrerpolicy="no-referrer">
            </div>归并排序的算法实现，基于《算法》的java版本，包括自顶向下和自底向上的两种。]]></description>
</item>
<item>
    <title>[翻译]Java高效泛型——Effective Generics</title>
    <link>http://example.org/posts/java-effective-generics-chinese/</link>
    <pubDate>Sun, 26 Nov 2023 00:00:00 &#43;0000</pubDate>
    <author>SroUngE</author>
    <guid>http://example.org/posts/java-effective-generics-chinese/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://s2.loli.net/2024/01/23/FdJWU6IpNZGfACv.png" referrerpolicy="no-referrer">
            </div>翻译《Java Generics and Collections》这本书的第8章节Effective Generics，其中介绍了一些关于如何在代码实践中有效使用泛型的建议。]]></description>
</item>
<item>
    <title>Java 泛型的深入思考：从历史起源到最佳实践</title>
    <link>http://example.org/posts/java-generic/</link>
    <pubDate>Wed, 01 Nov 2023 00:00:00 &#43;0000</pubDate>
    <author>SroUngE</author>
    <guid>http://example.org/posts/java-generic/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://s2.loli.net/2024/01/23/FdJWU6IpNZGfACv.png" referrerpolicy="no-referrer">
            </div>一个关于Java泛型的简短的研究调查和思考，依据官方的参考资料，试图理解泛型存在的意义，以及它的最佳实践。]]></description>
</item>
</channel>
</rss>
